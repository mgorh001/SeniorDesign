
Lab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  0000035c  000003d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000035c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000432  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000464  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fe2  00000000  00000000  00000554  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007c7  00000000  00000000  00001536  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006be  00000000  00000000  00001cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000194  00000000  00000000  000023bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006f0  00000000  00000000  00002550  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000068b  00000000  00000000  00002c40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  000032cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
   2:	00 00       	nop
   4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
   6:	00 00       	nop
   8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
   a:	00 00       	nop
   c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
   e:	00 00       	nop
  10:	3e c0       	rjmp	.+124    	; 0x8e <__bad_interrupt>
  12:	00 00       	nop
  14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
  16:	00 00       	nop
  18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
  1a:	00 00       	nop
  1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
  1e:	00 00       	nop
  20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
  22:	00 00       	nop
  24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>
  26:	00 00       	nop
  28:	32 c0       	rjmp	.+100    	; 0x8e <__bad_interrupt>
  2a:	00 00       	nop
  2c:	30 c0       	rjmp	.+96     	; 0x8e <__bad_interrupt>
  2e:	00 00       	nop
  30:	2e c0       	rjmp	.+92     	; 0x8e <__bad_interrupt>
  32:	00 00       	nop
  34:	2c c0       	rjmp	.+88     	; 0x8e <__bad_interrupt>
  36:	00 00       	nop
  38:	2a c0       	rjmp	.+84     	; 0x8e <__bad_interrupt>
  3a:	00 00       	nop
  3c:	28 c0       	rjmp	.+80     	; 0x8e <__bad_interrupt>
  3e:	00 00       	nop
  40:	26 c0       	rjmp	.+76     	; 0x8e <__bad_interrupt>
  42:	00 00       	nop
  44:	24 c0       	rjmp	.+72     	; 0x8e <__bad_interrupt>
  46:	00 00       	nop
  48:	22 c0       	rjmp	.+68     	; 0x8e <__bad_interrupt>
  4a:	00 00       	nop
  4c:	20 c0       	rjmp	.+64     	; 0x8e <__bad_interrupt>
  4e:	00 00       	nop
  50:	1e c0       	rjmp	.+60     	; 0x8e <__bad_interrupt>
  52:	00 00       	nop
  54:	1c c0       	rjmp	.+56     	; 0x8e <__bad_interrupt>
  56:	00 00       	nop
  58:	1a c0       	rjmp	.+52     	; 0x8e <__bad_interrupt>
  5a:	00 00       	nop
  5c:	18 c0       	rjmp	.+48     	; 0x8e <__bad_interrupt>
  5e:	00 00       	nop
  60:	16 c0       	rjmp	.+44     	; 0x8e <__bad_interrupt>
  62:	00 00       	nop
  64:	14 c0       	rjmp	.+40     	; 0x8e <__bad_interrupt>
	...

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 36       	cpi	r26, 0x62	; 98
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	43 d1       	rcall	.+646    	; 0x312 <main>
  8c:	65 c1       	rjmp	.+714    	; 0x358 <_exit>

0000008e <__bad_interrupt>:
  8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <_Z8I2C_Initv>:
	LCD_I2C_Clear();
	LCD_I2C_Set_Cursor(1, 1);
	LCD_I2C_Puts(messageTitle1);
	LCD_I2C_Set_Cursor(2, 1);
	LCD_I2C_Puts(messageTitle2);
}
  90:	82 e6       	ldi	r24, 0x62	; 98
  92:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
  96:	84 e0       	ldi	r24, 0x04	; 4
  98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  9c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
  a0:	08 95       	ret

000000a2 <_Z9I2C_Startv>:
  a2:	84 ea       	ldi	r24, 0xA4	; 164
  a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  a8:	ec eb       	ldi	r30, 0xBC	; 188
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	88 23       	and	r24, r24
  b0:	ec f7       	brge	.-6      	; 0xac <_Z9I2C_Startv+0xa>
  b2:	08 95       	ret

000000b4 <_Z9I2C_Writec>:
  b4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  b8:	84 e8       	ldi	r24, 0x84	; 132
  ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  be:	ec eb       	ldi	r30, 0xBC	; 188
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	88 23       	and	r24, r24
  c6:	ec f7       	brge	.-6      	; 0xc2 <_Z9I2C_Writec+0xe>
  c8:	08 95       	ret

000000ca <_Z18LCD_I2C_Send_Latchv>:
  ca:	eb eb       	ldi	r30, 0xBB	; 187
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	82 60       	ori	r24, 0x02	; 2
  d2:	80 83       	st	Z, r24
  d4:	84 e8       	ldi	r24, 0x84	; 132
  d6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  da:	ec eb       	ldi	r30, 0xBC	; 188
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	88 23       	and	r24, r24
  e2:	ec f7       	brge	.-6      	; 0xde <_Z18LCD_I2C_Send_Latchv+0x14>
  e4:	8f e9       	ldi	r24, 0x9F	; 159
  e6:	9f e0       	ldi	r25, 0x0F	; 15
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <_Z18LCD_I2C_Send_Latchv+0x1e>
  ec:	00 c0       	rjmp	.+0      	; 0xee <_Z18LCD_I2C_Send_Latchv+0x24>
  ee:	00 00       	nop
  f0:	eb eb       	ldi	r30, 0xBB	; 187
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	8d 7f       	andi	r24, 0xFD	; 253
  f8:	80 83       	st	Z, r24
  fa:	84 e8       	ldi	r24, 0x84	; 132
  fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 100:	ec eb       	ldi	r30, 0xBC	; 188
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	88 23       	and	r24, r24
 108:	ec f7       	brge	.-6      	; 0x104 <_Z18LCD_I2C_Send_Latchv+0x3a>
 10a:	08 95       	ret

0000010c <_Z25LCD_I2C_Send_Command_Halfh>:
 10c:	eb eb       	ldi	r30, 0xBB	; 187
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	90 81       	ld	r25, Z
 112:	9e 7f       	andi	r25, 0xFE	; 254
 114:	90 83       	st	Z, r25
 116:	90 81       	ld	r25, Z
 118:	9f 70       	andi	r25, 0x0F	; 15
 11a:	90 83       	st	Z, r25
 11c:	90 81       	ld	r25, Z
 11e:	80 7f       	andi	r24, 0xF0	; 240
 120:	98 2b       	or	r25, r24
 122:	90 83       	st	Z, r25
 124:	84 e8       	ldi	r24, 0x84	; 132
 126:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 12a:	ec eb       	ldi	r30, 0xBC	; 188
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	88 23       	and	r24, r24
 132:	ec f7       	brge	.-6      	; 0x12e <_Z25LCD_I2C_Send_Command_Halfh+0x22>
 134:	ca cf       	rjmp	.-108    	; 0xca <_Z18LCD_I2C_Send_Latchv>
 136:	08 95       	ret

00000138 <_Z20LCD_I2C_Send_Commandh>:
 138:	cf 93       	push	r28
 13a:	c8 2f       	mov	r28, r24
 13c:	eb eb       	ldi	r30, 0xBB	; 187
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	8e 7f       	andi	r24, 0xFE	; 254
 144:	80 83       	st	Z, r24
 146:	80 81       	ld	r24, Z
 148:	8f 70       	andi	r24, 0x0F	; 15
 14a:	80 83       	st	Z, r24
 14c:	80 81       	ld	r24, Z
 14e:	9c 2f       	mov	r25, r28
 150:	90 7f       	andi	r25, 0xF0	; 240
 152:	89 2b       	or	r24, r25
 154:	80 83       	st	Z, r24
 156:	84 e8       	ldi	r24, 0x84	; 132
 158:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 15c:	ec eb       	ldi	r30, 0xBC	; 188
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	88 23       	and	r24, r24
 164:	ec f7       	brge	.-6      	; 0x160 <_Z20LCD_I2C_Send_Commandh+0x28>
 166:	b1 df       	rcall	.-158    	; 0xca <_Z18LCD_I2C_Send_Latchv>
 168:	eb eb       	ldi	r30, 0xBB	; 187
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	8e 7f       	andi	r24, 0xFE	; 254
 170:	80 83       	st	Z, r24
 172:	80 81       	ld	r24, Z
 174:	8f 70       	andi	r24, 0x0F	; 15
 176:	80 83       	st	Z, r24
 178:	20 81       	ld	r18, Z
 17a:	30 e1       	ldi	r19, 0x10	; 16
 17c:	c3 9f       	mul	r28, r19
 17e:	c0 01       	movw	r24, r0
 180:	11 24       	eor	r1, r1
 182:	82 2b       	or	r24, r18
 184:	80 83       	st	Z, r24
 186:	84 e8       	ldi	r24, 0x84	; 132
 188:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 18c:	ec eb       	ldi	r30, 0xBC	; 188
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	88 23       	and	r24, r24
 194:	ec f7       	brge	.-6      	; 0x190 <_Z20LCD_I2C_Send_Commandh+0x58>
 196:	99 df       	rcall	.-206    	; 0xca <_Z18LCD_I2C_Send_Latchv>
 198:	cf 91       	pop	r28
 19a:	08 95       	ret

0000019c <_Z12LCD_I2C_Initv>:
 19c:	80 e3       	ldi	r24, 0x30	; 48
 19e:	b6 df       	rcall	.-148    	; 0x10c <_Z25LCD_I2C_Send_Command_Halfh>
 1a0:	80 e3       	ldi	r24, 0x30	; 48
 1a2:	b4 df       	rcall	.-152    	; 0x10c <_Z25LCD_I2C_Send_Command_Halfh>
 1a4:	80 e2       	ldi	r24, 0x20	; 32
 1a6:	b2 df       	rcall	.-156    	; 0x10c <_Z25LCD_I2C_Send_Command_Halfh>
 1a8:	88 e2       	ldi	r24, 0x28	; 40
 1aa:	c6 df       	rcall	.-116    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 1ac:	8c e0       	ldi	r24, 0x0C	; 12
 1ae:	c4 df       	rcall	.-120    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	c2 df       	rcall	.-124    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 1b4:	86 e0       	ldi	r24, 0x06	; 6
 1b6:	c0 df       	rcall	.-128    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 1b8:	80 e8       	ldi	r24, 0x80	; 128
 1ba:	be cf       	rjmp	.-132    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 1bc:	08 95       	ret

000001be <_Z17LCD_I2C_Send_Datah>:
 1be:	cf 93       	push	r28
 1c0:	c8 2f       	mov	r28, r24
 1c2:	eb eb       	ldi	r30, 0xBB	; 187
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	81 60       	ori	r24, 0x01	; 1
 1ca:	80 83       	st	Z, r24
 1cc:	80 81       	ld	r24, Z
 1ce:	8f 70       	andi	r24, 0x0F	; 15
 1d0:	80 83       	st	Z, r24
 1d2:	80 81       	ld	r24, Z
 1d4:	9c 2f       	mov	r25, r28
 1d6:	90 7f       	andi	r25, 0xF0	; 240
 1d8:	89 2b       	or	r24, r25
 1da:	80 83       	st	Z, r24
 1dc:	84 e8       	ldi	r24, 0x84	; 132
 1de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 1e2:	ec eb       	ldi	r30, 0xBC	; 188
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	80 81       	ld	r24, Z
 1e8:	88 23       	and	r24, r24
 1ea:	ec f7       	brge	.-6      	; 0x1e6 <_Z17LCD_I2C_Send_Datah+0x28>
 1ec:	6e df       	rcall	.-292    	; 0xca <_Z18LCD_I2C_Send_Latchv>
 1ee:	eb eb       	ldi	r30, 0xBB	; 187
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	81 60       	ori	r24, 0x01	; 1
 1f6:	80 83       	st	Z, r24
 1f8:	80 81       	ld	r24, Z
 1fa:	8f 70       	andi	r24, 0x0F	; 15
 1fc:	80 83       	st	Z, r24
 1fe:	20 81       	ld	r18, Z
 200:	30 e1       	ldi	r19, 0x10	; 16
 202:	c3 9f       	mul	r28, r19
 204:	c0 01       	movw	r24, r0
 206:	11 24       	eor	r1, r1
 208:	82 2b       	or	r24, r18
 20a:	80 83       	st	Z, r24
 20c:	84 e8       	ldi	r24, 0x84	; 132
 20e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 212:	ec eb       	ldi	r30, 0xBC	; 188
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	88 23       	and	r24, r24
 21a:	ec f7       	brge	.-6      	; 0x216 <_Z17LCD_I2C_Send_Datah+0x58>
 21c:	56 df       	rcall	.-340    	; 0xca <_Z18LCD_I2C_Send_Latchv>
 21e:	cf 91       	pop	r28
 220:	08 95       	ret

00000222 <_Z19LCD_I2C_Put_MessagePKc>:
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	ec 01       	movw	r28, r24
 228:	88 81       	ld	r24, Y
 22a:	88 23       	and	r24, r24
 22c:	29 f0       	breq	.+10     	; 0x238 <_Z19LCD_I2C_Put_MessagePKc+0x16>
 22e:	21 96       	adiw	r28, 0x01	; 1
 230:	c6 df       	rcall	.-116    	; 0x1be <_Z17LCD_I2C_Send_Datah>
 232:	89 91       	ld	r24, Y+
 234:	81 11       	cpse	r24, r1
 236:	fc cf       	rjmp	.-8      	; 0x230 <_Z19LCD_I2C_Put_MessagePKc+0xe>
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	08 95       	ret

0000023e <_Z12LCD_I2C_PutsPh>:
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	ec 01       	movw	r28, r24
 244:	88 81       	ld	r24, Y
 246:	88 23       	and	r24, r24
 248:	29 f0       	breq	.+10     	; 0x254 <_Z12LCD_I2C_PutsPh+0x16>
 24a:	21 96       	adiw	r28, 0x01	; 1
 24c:	b8 df       	rcall	.-144    	; 0x1be <_Z17LCD_I2C_Send_Datah>
 24e:	89 91       	ld	r24, Y+
 250:	81 11       	cpse	r24, r1
 252:	fc cf       	rjmp	.-8      	; 0x24c <_Z12LCD_I2C_PutsPh+0xe>
 254:	df 91       	pop	r29
 256:	cf 91       	pop	r28
 258:	08 95       	ret

0000025a <_Z13LCD_I2C_Clearv>:
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	6d df       	rcall	.-294    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 25e:	8f e7       	ldi	r24, 0x7F	; 127
 260:	9e e3       	ldi	r25, 0x3E	; 62
 262:	01 97       	sbiw	r24, 0x01	; 1
 264:	f1 f7       	brne	.-4      	; 0x262 <_Z13LCD_I2C_Clearv+0x8>
 266:	00 c0       	rjmp	.+0      	; 0x268 <_Z13LCD_I2C_Clearv+0xe>
 268:	00 00       	nop
 26a:	08 95       	ret

0000026c <_Z22UI_Display_Temperaturev>:

// Display Temperature ( 0 < T < 99 )
void UI_Display_Temperature()
{
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	cd b7       	in	r28, 0x3d	; 61
 274:	de b7       	in	r29, 0x3e	; 62
 276:	66 97       	sbiw	r28, 0x16	; 22
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
	unsigned char messageS1[] = "  Temperature   ";
 282:	81 e1       	ldi	r24, 0x11	; 17
 284:	ed e2       	ldi	r30, 0x2D	; 45
 286:	f1 e0       	ldi	r31, 0x01	; 1
 288:	de 01       	movw	r26, r28
 28a:	11 96       	adiw	r26, 0x01	; 1
 28c:	01 90       	ld	r0, Z+
 28e:	0d 92       	st	X+, r0
 290:	8a 95       	dec	r24
 292:	e1 f7       	brne	.-8      	; 0x28c <_Z22UI_Display_Temperaturev+0x20>
	unsigned char messageS2[] = "  T=";
 294:	85 e0       	ldi	r24, 0x05	; 5
 296:	ee e3       	ldi	r30, 0x3E	; 62
 298:	f1 e0       	ldi	r31, 0x01	; 1
 29a:	de 01       	movw	r26, r28
 29c:	52 96       	adiw	r26, 0x12	; 18
 29e:	01 90       	ld	r0, Z+
 2a0:	0d 92       	st	X+, r0
 2a2:	8a 95       	dec	r24
 2a4:	e1 f7       	brne	.-8      	; 0x29e <_Z22UI_Display_Temperaturev+0x32>
	
	LCD_I2C_Clear();
 2a6:	d9 df       	rcall	.-78     	; 0x25a <_Z13LCD_I2C_Clearv>
		
		case 4:
			address = 0xD4 + (column - 1);
			break;
	}
	LCD_I2C_Send_Command(address);		// Move Cursor
 2a8:	80 e8       	ldi	r24, 0x80	; 128
 2aa:	46 df       	rcall	.-372    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
	LCD_I2C_Set_Cursor(1, 1);
	LCD_I2C_Puts(messageS1);
 2ac:	ce 01       	movw	r24, r28
 2ae:	01 96       	adiw	r24, 0x01	; 1
 2b0:	c6 df       	rcall	.-116    	; 0x23e <_Z12LCD_I2C_PutsPh>
 2b2:	82 ec       	ldi	r24, 0xC2	; 194
	LCD_I2C_Set_Cursor(2, 3);
	LCD_I2C_Puts(messageS2);
 2b4:	41 df       	rcall	.-382    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 2b6:	ce 01       	movw	r24, r28
 2b8:	42 96       	adiw	r24, 0x12	; 18
 2ba:	c1 df       	rcall	.-126    	; 0x23e <_Z12LCD_I2C_PutsPh>
	LCD_I2C_Putchar(DEC_TO_ASCII[Temperature / 10]);
 2bc:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <Temperature>
 2c0:	1d ec       	ldi	r17, 0xCD	; 205
 2c2:	e1 9f       	mul	r30, r17
 2c4:	e1 2d       	mov	r30, r1
 2c6:	11 24       	eor	r1, r1
 2c8:	e6 95       	lsr	r30
 2ca:	e6 95       	lsr	r30
 2cc:	e6 95       	lsr	r30
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	e0 50       	subi	r30, 0x00	; 0
}

// Write Character to LCD
void LCD_I2C_Putchar(char c)
{
	LCD_I2C_Send_Data(c);
 2d2:	ff 4f       	sbci	r31, 0xFF	; 255
 2d4:	80 81       	ld	r24, Z
 2d6:	73 df       	rcall	.-282    	; 0x1be <_Z17LCD_I2C_Send_Datah>
	LCD_I2C_Putchar(DEC_TO_ASCII[Temperature % 10]);
 2d8:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <Temperature>
 2dc:	e1 9f       	mul	r30, r17
 2de:	11 2d       	mov	r17, r1
 2e0:	11 24       	eor	r1, r1
 2e2:	16 95       	lsr	r17
 2e4:	16 95       	lsr	r17
 2e6:	16 95       	lsr	r17
 2e8:	11 0f       	add	r17, r17
 2ea:	81 2f       	mov	r24, r17
 2ec:	88 0f       	add	r24, r24
 2ee:	88 0f       	add	r24, r24
 2f0:	18 0f       	add	r17, r24
 2f2:	e1 1b       	sub	r30, r17
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	e0 50       	subi	r30, 0x00	; 0
 2f8:	ff 4f       	sbci	r31, 0xFF	; 255
 2fa:	80 81       	ld	r24, Z
 2fc:	60 df       	rcall	.-320    	; 0x1be <_Z17LCD_I2C_Send_Datah>
}
 2fe:	66 96       	adiw	r28, 0x16	; 22
 300:	0f b6       	in	r0, 0x3f	; 63
 302:	f8 94       	cli
 304:	de bf       	out	0x3e, r29	; 62
 306:	0f be       	out	0x3f, r0	; 63
 308:	cd bf       	out	0x3d, r28	; 61
 30a:	df 91       	pop	r29
 30c:	cf 91       	pop	r28
 30e:	1f 91       	pop	r17
 310:	08 95       	ret

00000312 <main>:
void UI_Display_Homepage();
void UI_Display_Temperature();

int main( void )
{
	I2C_Init();
 312:	be de       	rcall	.-644    	; 0x90 <_Z8I2C_Initv>
	I2C_Start();
 314:	c6 de       	rcall	.-628    	; 0xa2 <_Z9I2C_Startv>
	I2C_Write(0x70);
 316:	80 e7       	ldi	r24, 0x70	; 112
 318:	cd de       	rcall	.-614    	; 0xb4 <_Z9I2C_Writec>
	LCD_I2C_Init();
 31a:	40 df       	rcall	.-384    	; 0x19c <_Z12LCD_I2C_Initv>
 31c:	80 e8       	ldi	r24, 0x80	; 128
		
		case 4:
			address = 0xD4 + (column - 1);
			break;
	}
	LCD_I2C_Send_Command(address);		// Move Cursor
 31e:	0c df       	rcall	.-488    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 320:	83 e4       	ldi	r24, 0x43	; 67
	//UI_Display_Homepage();

	LCD_I2C_Set_Cursor(1, 1);
	LCD_I2C_Put_Message("LCD I2C Master ");
 322:	91 e0       	ldi	r25, 0x01	; 1
 324:	7e df       	rcall	.-260    	; 0x222 <_Z19LCD_I2C_Put_MessagePKc>
 326:	82 ec       	ldi	r24, 0xC2	; 194
 328:	07 df       	rcall	.-498    	; 0x138 <_Z20LCD_I2C_Send_Commandh>
 32a:	83 e5       	ldi	r24, 0x53	; 83
 32c:	91 e0       	ldi	r25, 0x01	; 1
	LCD_I2C_Set_Cursor(2, 3);
	LCD_I2C_Put_Message("Simple Testing");
 32e:	79 df       	rcall	.-270    	; 0x222 <_Z19LCD_I2C_Put_MessagePKc>
 330:	2f ef       	ldi	r18, 0xFF	; 255
 332:	89 e6       	ldi	r24, 0x69	; 105
 334:	98 e1       	ldi	r25, 0x18	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 336:	21 50       	subi	r18, 0x01	; 1
 338:	80 40       	sbci	r24, 0x00	; 0
 33a:	90 40       	sbci	r25, 0x00	; 0
 33c:	e1 f7       	brne	.-8      	; 0x336 <main+0x24>
 33e:	00 c0       	rjmp	.+0      	; 0x340 <main+0x2e>
 340:	00 00       	nop
 342:	94 df       	rcall	.-216    	; 0x26c <_Z22UI_Display_Temperaturev>
 344:	2f ef       	ldi	r18, 0xFF	; 255
	
	_delay_ms(500);
	while(1)
	{
		UI_Display_Temperature();
 346:	83 ed       	ldi	r24, 0xD3	; 211
 348:	90 e3       	ldi	r25, 0x30	; 48
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	80 40       	sbci	r24, 0x00	; 0
 34e:	90 40       	sbci	r25, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <main+0x38>
 352:	00 c0       	rjmp	.+0      	; 0x354 <main+0x42>
 354:	00 00       	nop
 356:	f5 cf       	rjmp	.-22     	; 0x342 <main+0x30>

00000358 <_exit>:
 358:	f8 94       	cli

0000035a <__stop_program>:
 35a:	ff cf       	rjmp	.-2      	; 0x35a <__stop_program>
